"""Add explicit constraint names

Revision ID: 8edddab039eb
Revises: 
Create Date: 2025-09-03 13:36:18.875867

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8edddab039eb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('USERS', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('idUser',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('strUser',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('strPassword',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.create_unique_constraint('uq_user_strUser', ['strUser'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('USERS', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_strUser', type_='unique')
        batch_op.alter_column('strPassword',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('strUser',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('idUser',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
