"""Initial schema setup including strHomePage

Revision ID: bde0586764ee
Revises: 
Create Date: 2025-09-30 16:47:48.473776

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bde0586764ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('USERS',
    sa.Column('idUser', sa.String(length=36), nullable=False),
    sa.Column('strUser', sa.String(length=80), nullable=False),
    sa.Column('strPassword', sa.String(length=128), nullable=False),
    sa.Column('strEmail', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('strHomePage', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('idUser'),
    sa.UniqueConstraint('strEmail', name='uq_user_strEmail'),
    sa.UniqueConstraint('strUser', name='uq_user_strUser')
    )
    op.create_table('WG',
    sa.Column('idWG', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('etage', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['USERS.idUser'], name='fk_wg_creator', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idWG'),
    sa.UniqueConstraint('address', 'etage', name='uq_wg_address_etage'),
    sa.UniqueConstraint('title', name='uq_wg_title')
    )
    op.create_table('BUDGETPLANNING',
    sa.Column('idBudgetPlanning', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('goal', sa.Float(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.String(length=36), nullable=True),
    sa.Column('wg_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['USERS.idUser'], ),
    sa.ForeignKeyConstraint(['wg_id'], ['WG.idWG'], ),
    sa.PrimaryKeyConstraint('idBudgetPlanning')
    )
    op.create_table('SHOPPINGLIST',
    sa.Column('idShoppingList', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('is_checked', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.String(length=36), nullable=True),
    sa.Column('wg_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['USERS.idUser'], ),
    sa.ForeignKeyConstraint(['wg_id'], ['WG.idWG'], ),
    sa.PrimaryKeyConstraint('idShoppingList')
    )
    op.create_table('TASKLIST',
    sa.Column('idTaskList', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('is_checked', sa.Boolean(), nullable=True),
    sa.Column('wg_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['wg_id'], ['WG.idWG'], ),
    sa.PrimaryKeyConstraint('idTaskList')
    )
    op.create_table('admin_wg',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('wg_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], ),
    sa.ForeignKeyConstraint(['wg_id'], ['WG.idWG'], ondelete='CASCADE')
    )
    op.create_table('user_wg',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('wg_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], ),
    sa.ForeignKeyConstraint(['wg_id'], ['WG.idWG'], ondelete='CASCADE')
    )
    op.create_table('COST',
    sa.Column('idCost', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('goal', sa.Float(), nullable=True),
    sa.Column('paid', sa.Float(), nullable=True),
    sa.Column('budgetplanning_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['budgetplanning_id'], ['BUDGETPLANNING.idBudgetPlanning'], ),
    sa.PrimaryKeyConstraint('idCost')
    )
    op.create_table('ITEM',
    sa.Column('idItem', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_checked', sa.Boolean(), nullable=True),
    sa.Column('shoppinglist_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['shoppinglist_id'], ['SHOPPINGLIST.idShoppingList'], ),
    sa.PrimaryKeyConstraint('idItem')
    )
    op.create_table('TASK',
    sa.Column('idTask', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_done', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('tasklist_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['tasklist_id'], ['TASKLIST.idTaskList'], ),
    sa.PrimaryKeyConstraint('idTask')
    )
    op.create_table('user_budgetplanning',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('budgetplanning_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['budgetplanning_id'], ['BUDGETPLANNING.idBudgetPlanning'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    op.create_table('user_shoppinglist',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('shoppinglist_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['shoppinglist_id'], ['SHOPPINGLIST.idShoppingList'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    op.create_table('user_tasklist',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('tasklist_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['tasklist_id'], ['TASKLIST.idTaskList'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    op.create_table('user_cost',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('cost_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['cost_id'], ['COST.idCost'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    op.create_table('user_item',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('item_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['ITEM.idItem'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    op.create_table('user_task',
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('task_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['TASK.idTask'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['USERS.idUser'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_task')
    op.drop_table('user_item')
    op.drop_table('user_cost')
    op.drop_table('user_tasklist')
    op.drop_table('user_shoppinglist')
    op.drop_table('user_budgetplanning')
    op.drop_table('TASK')
    op.drop_table('ITEM')
    op.drop_table('COST')
    op.drop_table('user_wg')
    op.drop_table('admin_wg')
    op.drop_table('TASKLIST')
    op.drop_table('SHOPPINGLIST')
    op.drop_table('BUDGETPLANNING')
    op.drop_table('WG')
    op.drop_table('USERS')
    # ### end Alembic commands ###
